/*
 * 연산자
 * 38p => 산술연산자
 * 41p => 증감연산자
 * 44p => 비교연산자
 * 45p => 논리연산자
 * 48p => 조건연산자 (삼항연산자)
 * => 대입연산자
 * -----------------------------
 *  자바에서 지원하는 연산자
 *  1. 단항연산자
 *  	= 증감연산자 ++ -- => 한 개 증가, 한 개 감소 시에 사용
 *  					=> 주요 사용처: 반복문(for, while, do~while)
 *  	  1) 전치 연산자 : 먼저 증가한 후에 다른 연산자를 수행
 *  		예)
 *  			int a=10;
 *  			int b= ++a;
 *  				   --- 증가 => a=11
 *  				--- b에 증가된 a값을 대입 => b=11
 *  
 *  	  2) 후치 연산자 : 다른 연산자를 수행 후 나중에 증가
 *    		예)
 *  			int a=10;
 *  			int b= a++;
 *  				-- b에 증가 안 된 a값을 대입 => b=10
 *  					--- a를 한개 증가
 *  
 *  			char c='A';
 *  			System.out.println(c++); // 출력하고 증가: A 
 *  			System.out.println(++c); // 증가하고 출력: B
 *  			System.out.println(c);
 *  
 *  			int a=10;
 *  			int b= a--;
 *  			a=9, b=10
 *  			
 *  			int a=10;
 *  			int b= --a;
 *  			a=9, b=9
 *  
 *  			한 개 증가 / 한 개 감소
 *  			a++, ++a, a=a+1, a+=1
 *  			a--, --a, a=a-1, a-=1
 *  			==========================> byte, char, short, int, long, double
 *  
 *  	= 부정연산자 (!) ==> boolean만 사용 가능
 *  		true => !true = false
 *  			 	!false = true
 *  
 *  				int a=10;
 *  				!(a%2==0) => true => 논리연산자
 *  
 *  	= 형변환연산자 (데이터형)
 *  		= 자동형변환
 *  		: 작은데이터 -> 큰 데이터형에 대입
 *  			int a='A' ==> 65
 *  			long a=10 ==> 10L
 *  			double d=10 ==> 10.0   
 *          --------------------------------------------------------------------------------------------
 *  			int a=(int)10.5
 *  		: 연산처리 시
 *  
 *  		= 강제형변환
 *  		: 큰 데이터형 -> 작은 데이터형으로 변경
 *  			byte < char < int < long < double
 *  
 *  2. 이항연산자
 *  	= 산술연산자 + - * / % 
 *  		+
 *  		======> + 산술 예)      10+10 => 20
 *  				+ 문자열 결합 예) 10+"10" => 1010
 *  								7+"7"+7 => "77"+7 => "777"
 *  	= 비교연산자 == != < > <= >=
 *  	= 논리연산자 && ||
 *  	= 대입연산자 = += -=
 *  
 *  3. 삼항연산자
 *  	= 조건?값:값
 * 
 */
public class 연산자정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		char c='A';
		System.out.println(++c);
		double d=10;
		d++;
		System.out.println(d);

	}

}
